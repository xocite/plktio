<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1" />
<link href="themes/test/style.css" rel="stylesheet">
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-144235537-2"></script>
<script>
  window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-144235537-2');
</script>
<title>Setting up a Docker Pi-hole DNS server for wired and wireless clients &#8211; AJONLINE</title>
<link rel='dns-prefetch' href='https://s.w.org/' />
<link rel="alternate" type="application/rss+xml" title="AJONLINE &raquo; Setting up a Docker Pi-hole DNS server for wired and wireless clients Comments Feed" href="https://antonyjepson.co.uk/docker-pi-hole-dns-wired-wireless/feed/" />
<link rel='stylesheet' id='wp-block-library-css'  href='css/dist/block-library/style.min.css?ver=5.2.2' type='text/css' media='all' />
<link rel='https://api.w.org/' href='https://antonyjepson.co.uk/wp-json/' />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="xmlrpc.php?rsd" />
<link rel='prev' title='Understanding SHA256 Part 3' href='index.html?p=663' />
<link rel='next' title='Setting up macOS Mojave' href='index.html?p=598' />
<meta name="generator" content="WordPress 5.2.2" />
<link rel="canonical" href="index.html?p=582" />
<link rel='shortlink' href='index.html?p=582' />
<link rel="icon" href="uploads/2018/11/favicon.ico" sizes="32x32" />
<link rel="icon" href="uploads/2018/11/favicon.ico" sizes="192x192" />
<link rel="apple-touch-icon-precomposed" href="uploads/2018/11/favicon.ico" />
<meta name="msapplication-TileImage" content="https://antonyjepson.co.uk/wp-content/uploads/2018/11/favicon.ico" />
</head>
<body>
<div class="gc">
<div class="gi0">
<nav>
<img class="logo" src="uploads/2018/11/favicon.ico" />
<header class="nav">
<a href="https://antonyjepson.co.uk">AJONLINE</a>
</header>
<br /><br /><br />
<li class="page_item page-item-80"><a href="index.html?p=80">About</a></li>
<li class="page_item page-item-596"><a href="index.html?p=596">Contact and Consulting</a></li>
<li class="page_item page-item-668"><a href="index.html?p=668">License</a></li>
<li class="page_item page-item-613"><a href="index.html?p=613">Resume</a></li>
<br />
</nav>
</div> <!-- end gi0 -->
<div class="gi1">

<article>
<header>Setting up a Docker Pi-hole DNS server for wired and wireless clients</header>
<em>Pi-Hole is a DNS resolver that prevents the resolution of common ad-hosting networks. I have a server in my household that I wanted to run as a Pi-hole server for both Ethernet and wireless clients. Here&#8217;s how I did it. Keep in mind that when changing the network configuration it&#8217;s wise to do it incrementally [&hellip;]</em><br /><em>21 November 2018</em>
<p>Pi-Hole is a DNS resolver that prevents the resolution of common ad-hosting networks. I have a server in my household that I wanted to run as a Pi-hole server for both Ethernet and wireless clients. Here&#8217;s how I did it. Keep in mind that when changing the network configuration it&#8217;s wise to do it incrementally and test each step to avoid making a mistake and not being able to troubleshoot. In addition, Pi-hole was originally designed to be the only thing installed on a Raspberry Pi so to make the configuration less invasive on my existing system, I&#8217;ll be using the official Docker container. For a much simpler installation, go ahead and run the curl | bash command on their home page.</p>
<h4>Network topology</h4>
<p>You&#8217;ll need to get a good idea of your current network topology before continuing. In my case, I wanted to let this be opt-in for other clients on the network because I didn&#8217;t want to cache other people&#8217;s DNS requests. This means I wouldn&#8217;t alter the DNS settings on the router.<br />
First, I mapped out my current network topology. This is pretty easy to do if you just trace the cables in the house. Your set up will probably match mine:</p>
<ul>
<li>WAN from your internet provider connects to to a DOCSIS modem.
<ul>
<li>This modem provides WiFi (normally 802.11ac) to your IoT devices, mobile phones, and other connected devices.</li>
<li>It may also be connected to a wireless repeater to resolve deadspots in the house.<br />
It also provides wired Ethernet.</li>
</ul>
</li>
<li>This wired Ethernet may be connected to a switch to reduce cables across the home.</li>
<li>It may optionally have telephone ports for VoIP.</li>
</ul>
<p>A simpler home set up might only have wireless clients.</p>
<p>My configuration mirrors the above and my server is connected to the switch mentioned. Next step is to look at the current configuration according to your devices. You&#8217;ll need to gather the interface settings for your router and your server.</p>
<p>In my case,</p>
<ul>
<li>Router
<ul>
<li>Connected to: WAN from internet provider</li>
<li>IP address: 192.168.0.1</li>
<li>DHCP settings: 192.168.0.2 to 192.168.254, subnet mask: 255.255.255.0</li>
<li>Built in DNS server available on: 192.168.4.100 and 192.168.8.100</li>
</ul>
</li>
<li>Server
<ul>
<li>Connected to: switch, which is connected to modem</li>
<li>IP address (Ethernet): 192.168.0.2</li>
<li>IP address (Wireless): not configuredDHCP settings: same as router</li>
</ul>
</li>
</ul>
<p>With this in mind, we want to configure the server to act as a wireless hotspot for the Ethernet connection while also providing DNS for both wireless and wired clients. Fortunately, this is pretty simple to do, once you know which apps and files are needed.<br />
This guide uses Debian 9 and NetworkManager.<br />
First, we&#8217;ll configure the wireless access point and make sure clients can connect. Look at your current configuration:</p>
<pre>$ nmcli
eno1: connected to Wired connection 1
"Intel Ethernet Connection I217-LM"
ethernet (e1000e), AA:BB:CC:DD:EE:FF, hw, mtu 1500
ip4 default
inet4 192.168.0.2/24
route4 169.254.0.0/16

wlp3s0: disconnected
"Intel Wireless"
wifi (iwlwifi), AA:BB:CC:DD:EE:FF, hw

lo: unmanaged
loopback (unknown), 00:00:00:00:00:00, sw, mtu 65536

DNS configuration:
servers: 194.168.4.100 194.168.8.100
interface: eno1</pre>
<pre>Next, create a wireless hotspot, confirm you can connect, and then delete it.
$ sudo nmcli --show-secrets dev wifi hotspot
Hotspot password: xMNUYLGH
Device 'wlp3s0' successfully activated with '95f843c0-18b4-4133-a27f-9d3eb12be8e7'.
[.. connect to the device ..]
$ sudo nmcli connection down uuid 95f843c0-18b4-4133-a27f-9d3eb12be8e7
$ sudo nmcli connection delete uuid 95f843c0-18b4-4133-a27f-9d3eb12be8e7</pre>
<p>Now that we&#8217;re certain we can create a hotspot we can configure it to our preferences.</p>
<h4>Pi-hole with Docker</h4>
<p>Installing Docker is relatively simple. We&#8217;ll enable the HTTPS functionality for their repository and then download the Community Edition of Docker.</p>
<pre>$ sudo apt install gnupg2 curl ca-certificates apt-transport-https software-properties-common</pre>
<p>Install their GPG key. You can verify the fingerprint by comparing the output from the below command with their official documentation [link]. Last time I checked, the fingerprint&#8217;s last 8 characters were: 0x0EBFCD88.</p>
<pre>$ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</pre>
<p>Next, enable the stable repository for this release. In my case I&#8217;m using Debian Stretch.</p>
<pre>$ sudo add-apt-repository \
"deb [arch=amd64] https://download.docker.com/linux/debian \
$(lsb_release -cs) \
stable"</pre>
<p>Finally, download Docker.</p>
<pre>$ sudo apt update
$ sudo apt install docker-ce</pre>
<p>Confirm that it works.</p>
<pre>$ sudo docker run hello-world</pre>
<p>If this works, add yourself to the Docker group and log out and then log in.</p>
<pre>$ sudo usermod -aG docker `whoami`</pre>
<p>Now we can launch the Pi-hole Docker container and configure it to act as a DNS server. We&#8217;ll use the following configuration settings.</p>
<ul>
<li>Host mode: meaning that container&#8217;s network stack is shared with the host. This will be necessary when exposing ports 53 for DNS and 80 for the web interface, and 443 for SSL ads.</li>
<li>DNS from Cloudflare: 1.1.1.1</li>
<li>Environmental variables</li>
<li>ServerIP=192.168.0.2; the IP of the server on the local network</li>
</ul>
<pre>$ docker pull pihole/pihole
$ mkdir -p ~/local/docker/pihole/pihole/etc/{pihole,dnsmasq.d}
$ docker run \
--name pihole \
-p 80:80 \
-p 53:53/tcp \
-p 53:53/udp \
-p 443:443/tcp \
-p 443:443/udp \
-v ~/local/docker/pihole.pihole/etc/pihole:/etc/pihole \
-v ~/local/docker/pihole.pihole/etc/dnsmasq.d:/etc/dnsmasq.d \
--dns=127.0.0.1 \
--dns=1.1.1.1 \
-e ServerIP=192.168.0.2 \
-e IPv6=False \
-e DNS1=192.168.4.100 \
-e DNS1=192.168.8.100 \
-e WEBPASSWORD=password \
pihole/pihole:latest</pre>
<p>If you get some sort of error such as &#8220;Couldn&#8217;t bind to :80 because already in use&#8221;, correct the error, delete the container, and try again.</p>
<pre>$ sudo systemctl stop apache2
$ sudo systemctl disable apache2
$ docker container list -a
$ docker container rm &lt;container&gt;</pre>
<p>Now finally, connect to your container by navigating to http://&lt;server_ip&gt; on a different computer.</p>
<p>You can also check that your container has network access by:</p>
<pre>$ docker container exec pihole ping www.google.com</pre>
<p>Now the Docker container is up and running, go ahead and change the settings on your wired interface to use the IP address of your server as the DNS address.</p>
<p>For wireless clients, we&#8217;ll go ahead and configure the hotspot again, this time setting the DNS to use our server. Notice that due to installing Docker our networking configuration has changed.</p>
<pre>$ sudo nmcli
docker0: connected to docker0
bridge, 02:42:FB:FA:35:DE, sw, mtu 1500
inet4 172.17.0.1/16
inet6 fe80::42:fbff:fefa:35de/64

veth9259d68: unmanaged
ethernet (veth), 72:FD:6C:AD:CE:D9, sw, mtu 1500

DNS configuration:
servers: 194.168.4.100 194.168.8.100
interface: eno1</pre>
<p>Now we have two more interfaces: docker0 and veth9259d68. Unfortunately, on my end when I create the hotspot, clients aren&#8217;t issued an IP address. Let&#8217;s debug NetworkManager and see what routes are being created.</p>
<p>Create the hotspot with nmcli</p>
<pre>$ sudo nmcli --show-secrets dev wifi hotspot</pre>
<p>Now, we&#8217;ll use the lower level networking tools to see what&#8217;s happening.</p>
<pre>$ ip r
default via 192.168.0.1 dev eno1 proto static metric 100
10.42.0.0/24 dev wlp3s0 proto kernel scope link src 10.42.0.1 metric 600
169.254.0.0/16 dev eno1 scope link metric 1000
172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1
192.168.0.0/24 dev eno1 proto kernel scope link src 192.168.0.2 metric 100</pre>
<p>Next, let&#8217;s look at the configuration file NetworkManager creates for the hotspot.</p>
<pre>$ cat /etc/NetworkManager/system-connections/Hotspot
[connection]
id=Hotspot
uuid=2473d7a3-4e0f-40d9-b239-72e52c6fad63
type=wifi
autoconnect=false
permissions=

[wifi]
hidden=true
mac-address=AC:FD:CE:87:84:D0
mac-address-blacklist=
mode=ap
ssid=Hotspot-luv

[wifi-security]
group=ccmp;
key-mgmt=wpa-psk
pairwise=ccmp;
proto=rsn;
psk=ZoKpIEU4

[ipv4]
dns-search=
method=shared

[ipv6]
addr-gen-mode=stable-privacy
dns-search=
method=ignore</pre>
<p>Here, the culprit is the [ipv4] method=shared line. In the nm-setting-ip4-config.c file, we can see the following description for this setting.</p>
<blockquote><p>* NetworkManager supports 5 values for the #NMSettingIPConfig:method property<br />
* for IPv4. If &#8220;auto&#8221; is specified then the appropriate automatic method<br />
* (DHCP, PPP, etc) is used for the interface and most other properties can be<br />
* left unset. If &#8220;link-local&#8221; is specified, then a link-local address in the<br />
* 169.254/16 range will be assigned to the interface. If &#8220;manual&#8221; is<br />
* specified, static IP addressing is used and at least one IP address must be<br />
* given in the &#8220;addresses&#8221; property. If &#8220;shared&#8221; is specified (indicating that<br />
* this connection will provide network access to other computers) then the<br />
* interface is assigned an address in the 10.42.x.1/24 range and a DHCP and<br />
* forwarding DNS server are started, and the interface is NAT-ed to the current<br />
* default network connection. &#8220;disabled&#8221; means IPv4 will not be used on this<br />
* connection.</p></blockquote>
<p>So from this description, it seems like the problem is the DHCP and forwarding DNS server aren&#8217;t starting correctly. Let&#8217;s look at the NetworkManager logs and see if anything is awry. We&#8217;ll also stop the Pi-hole container to avoid any other issues.</p>
<pre>$ docker stop pihole
$ sudo journalctl -u NetworkManager --since "1 hour ago"</pre>
<p>Walking through the logs is quite enlightening. (1) We see that NetworkManager creates IPtables entries for the interface, including to forward DNS and DHCP ports to the local DNSmasq instance. (2) We see that dnsmasq-manager failed to create a listening socket due to the address already in use by the Docker container.</p>
<p>Now &#8211; before rushing ahead and trying to fix this, it&#8217;s important to restate what we&#8217;re trying to accomplish here. Approaching the problem with the mindset of &#8220;how do I fix this&#8221; is wrong and will lead you down a DuckDuckGo / StackOverflow rabbit hole. In this scenario, we&#8217;re trying to issue an IP address to clients on the wlp3s0 interface. In addition, we want these clients to use the server as the DNS server so their DNS requests go through the Pi-hole Docker container.</p>
<p>Modify the default settings for shared IP interfaces.</p>
<pre>$ sudo vim /etc/NetworkManager/dnsmasq-shared.d/default.conf
# Disable local DNS server
port=0

# Use Pi-hole for DNS requests
dhcp-option=option:dns-server,192.168.0.2,192.168.4.100</pre>
<p>Now try restarting the docker container and the wireless hotspot. Check the log for errors.</p>
<pre>$ docker start pihole
$ sudo nmcli --show-secrets dev wifi hotspot
$ sudo journalctl --since "1 minute ago" -u NetworkManager</pre>
<p>No errors should be seen. Connect via your wireless device and confirm that new blocked entries are being inserted into the Pi-hole dashboard by going to your server IP address.</p>
<p>So in summary, we set up Pi-hole on Docker in Debian Stretch to block common adhosting networks for both wired and wireless clients on our home network. For me, this was a good test scenario to become more familiar with Docker.</p>
<p>Overall, I think that host based ad-blocking won&#8217;t be effective much longer as more and more content gets bundled with ads behind content delivery networks. The best practice regarding ads, in my opinion, is to only visit sites with acceptable ad practices. This means no pop-overs/pop-unders or stealing focus as well as not tracking you incessantly across the web. I suspect that ad-blocking has and will continue to move client-side. A simple way to avoid the most nefarious of ads is to use the Mozilla multi-container extension which lets you separate your online life into separate entities.</p>
<p><img class="alignnone size-full wp-image-619" src="uploads/2018/12/pi-hole.png" alt="" width="1392" height="944" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h4>Sources</h4>
<p>https://wireless.wiki.kernel.org/en/users/Documentation/rfkill</p>
<p>https://unix.stackexchange.com/questions/234552/create-wireless-access-point-and-share-internet-connection-with-nmcli</p>
<p>https://docs.docker.com/install/linux/docker-ce/debian/#set-up-the-repository</p>
<p>https://addons.mozilla.org/en-US/firefox/addon/multi-account-containers/</p>
<p>https://gitlab.freedesktop.org/NetworkManager/NetworkManager/tags/1.6.2</p>
<p>https://github.com/jwilder/nginx-proxy</p>
</article>
</div> <!-- end gi1 -->
<aside class="gi2">
<ul>
<strong>2019</strong><li>7 Jun <a href="index.html?p=778">plkt.io</a></li><li>29 May <a href="index.html?p=774">Using Amplify to launch your first Gatsby app</a></li><li>29 May <a href="index.html?p=768">Immediate broken pipe when connecting via SSH on Gentoo under VMWare Fusion</a></li><li>22 Apr <a href="index.html?p=754">Debugging ebuild failure on Gentoo for lxml</a></li><li>17 Apr <a href="index.html?p=749">Git up and going</a></li><li>29 Mar <a href="index.html?p=741">Using GPG to master your identity (Part 1)</a></li><li>23 Mar <a href="index.html?p=727">Moving a user cron job to a systemd timer</a></li><li>4 Mar <a href="index.html?p=723">Building plkt.io</a></li><li>21 Feb <a href="index.html?p=714">VLAN Primer</a></li><li>6 Feb <a href="index.html?p=707">Creating a disposable dev environment using libvirt</a></li><li>21 Jan <a href="index.html?p=700">Selectively applying changes with Git Stash</a></li><li>9 Jan <a href="index.html?p=690">2019 Goals and Tentatives</a></li><li>4 Jan <a href="index.html?p=680">Fresh Ubuntu 18.04 Install</a></li><li>3 Jan <a href="index.html?p=675">Quickly setting up a local Tiny Tiny RSS instance with Docker</a></li><br /><strong>2018</strong><li>20 Dec <a href="index.html?p=630">Generating smooth sine tone output on iOS</a></li><li>14 Dec <a href="index.html?p=626">Installing Jupyter on macOS Mojave</a></li><li>28 Nov <a href="index.html?p=602">ifconfig Output on macOS Mojave</a></li><li>23 Nov <a href="index.html?p=598">Setting up macOS Mojave</a></li><li>21 Nov <a href="index.html?p=582">Setting up a Docker Pi-hole DNS server for wired and wireless clients</a></li><li>13 May <a href="index.html?p=663">Understanding SHA256 Part 3</a></li><li>12 May <a href="index.html?p=662">Understanding SHA256 Part 2</a></li><li>11 May <a href="index.html?p=661">Understanding SHA256 Part 1</a></li><li>1 Apr <a href="index.html?p=622">Demoscene</a></li><li>1 Jan <a href="index.html?p=624">Running a Bitcoin node</a></li><br /><strong>2016</strong><li>21 Oct <a href="index.html?p=576">Hosting my own blog</a></li><li>4 Aug <a href="index.html?p=544">Creating a video montage with ffmpeg</a></li><br /><strong>2015</strong><li>27 Dec <a href="index.html?p=524">Cloning Logical Volumes on Linux</a></li><li>29 Aug <a href="index.html?p=520">Google public WiFI</a></li><li>29 Aug <a href="index.html?p=508">Arch Linux on Dell M6800</a></li><li>20 Jul <a href="index.html?p=429">iOS 9 Public Beta 1 Changes</a></li><li>19 Apr <a href="index.html?p=492">PDF Minimalist 2015 Calendar for Printing</a></li><br /><strong>2013</strong><li>1 Apr <a href="index.html?p=484">Setting up a git server accessible via ssh</a></li><br /><strong>2012</strong><li>13 Apr <a href="index.html?p=424">Google&#039;s addition of C class stock</a></li><li>1 Mar <a href="index.html?p=405">Backing up your Gmail account using procmail and fetchmail</a></li><li>26 Jan <a href="index.html?p=396">Quickly Attaching USB Devices to VirtualBox Guests using VBoxManage</a></li><br /><strong>2011</strong><li>2 Jun <a href="index.html?p=389">Predictions for iOS 5</a></li><li>10 Feb <a href="index.html?p=385">HP Veer</a></li><br /><strong>2010</strong><li>1 May <a href="index.html?p=378">Getting Started with Symbian Development</a></li><br /><strong>2009</strong><li>2 Nov <a href="index.html?p=373">Printing to a remote printer</a></li><li>10 Sep <a href="index.html?p=369">KDE DPI Issue</a></li><li>22 Aug <a href="index.html?p=365">Sony NWZ-E438F + Video</a></li><li>11 Aug <a href="index.html?p=361">Movies for August 2009</a></li><li>26 Jul <a href="index.html?p=356">Readline</a></li><li>18 Jul <a href="index.html?p=347">Installing Windows XP in VirtualBox</a></li><li>16 Jul <a href="index.html?p=338">Looking Good&#8230;Minimally</a></li><li>3 Jul <a href="index.html?p=335">FreeBSD and Arch Linux</a></li><li>27 Jun <a href="index.html?p=332">Using your Gmail contacts in Mutt</a></li><li>27 Jun <a href="index.html?p=331">Recent Microsoft Developments</a></li><li>25 Jun <a href="index.html?p=318">Budget Intel Gaming Rig ($500)</a></li><li>15 Jun <a href="index.html?p=325">A tired mind cannot comprehend pointer arithmetic</a></li><li>14 Jun <a href="index.html?p=232">Managing gpg keys across multiple computers</a></li><li>1 Jun <a href="index.html?p=313">Elinks advanced URI management</a></li><li>26 May <a href="index.html?p=311">xf86-video-intel-2.6.3 and xorg-server-1.6.1 &#8230; a big fail</a></li><li>24 May <a href="index.html?p=204">Install a GNU/Linux distribution upon a USB Stick</a></li><li>29 Apr <a href="index.html?p=260">Squashing the PITA!</a></li><br /><strong>2008</strong><li>16 Dec <a href="index.html?p=243">Atomicity</a></li><li>16 Dec <a href="index.html?p=247">Changing the default X11 Cursor</a></li><li>9 Dec <a href="index.html?p=238">Using xbindkeys to manage media buttons</a></li><li>8 Dec <a href="index.html?p=242">xf86-video-intel-2.4.3</a></li><li>15 Nov <a href="index.html?p=234">Compiling 2.6.27.6 using the vanilla kernel tree sources</a></li><li>10 Nov <a href="index.html?p=215">MigrationHeuristic</a></li><li>28 Oct <a href="index.html?p=195">Arch Linux and the HP Compaq 2710p</a></li><li>18 Oct <a href="index.html?p=187">Setting up IMAP on Mutt</a></li><li>7 Oct <a href="index.html?p=152">Managing your wireless connection with Wireless Tools for Linux</a></li><li>19 Aug <a href="index.html?p=177">Upgrading to linux-2.6.27-rc3</a></li><li>10 Aug <a href="index.html?p=146">Automatically logout after X is killed</a></li><li>9 Aug <a href="index.html?p=129">Upgrading to catalyst-8.7</a></li><li>8 Aug <a href="index.html?p=123">Upgrading to linux-2.6.27-rc2</a></li><li>4 Aug <a href="index.html?p=106">Upgrading to linux-2.6.27-rc1</a></li><li>1 Aug <a href="index.html?p=86">Customising Email Signatures with Fortune</a></li><li>28 Jul <a href="index.html?p=85">Time Saving Vim Movement Tips</a></li><li>20 Jul <a href="index.html?p=53">Configuring the default prompt (PS1)</a></li><li>15 Jul <a href="index.html?p=45">Adding additional email accounts to your email setup</a></li><li>12 Jul <a href="index.html?p=47">Setting up Mutt</a></li><li>8 Jul <a href="index.html?p=28">Making Diagrams with Xy-pic</a></li><li>7 Jul <a href="index.html?p=26">Changing The Default X Cursor</a></li><li>6 Jul <a href="index.html?p=24">My Desktop &#8211; The Terminal</a></li><li>30 Jun <a href="index.html?p=18">My Desktop &#8211; Music</a></li><li>28 Jun <a href="index.html?p=15">My Desktop &#8211; The Web</a></li><li>26 Jun <a href="index.html?p=8">My Desktop</a></li><li>25 Jun <a href="index.html?p=79">Rationale</a></li></ul> 
</aside>
<footer class="gi3">
<hr />
&copy; 2008 &mdash; 2018 Xocite
</footer>
</div> <!-- end gc -->
</body>
</html>

{"componentChunkName":"component---src-templates-blog-template-js","path":"/writing/zsh","result":{"data":{"markdownRemark":{"html":"<p>In preparation from my migration to Catalina this weekend, I put together a quick list of changes to keep in mind when using Bash over Zsh.  Keep in mind that a modern build of Bash has most of these features  but I'll always jump at the opportunity to learn something new.</p>\n<p>Here's my humble original bashrc file (<a href=\"https://github.com/xocite/dotrc/blob/master/bashrc\">GitHub</a>).</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">source</span> <span class=\"token environment constant\">$HOME</span>/.aliases\n\n<span class=\"token comment\"># Read our local bashrc.</span>\n<span class=\"token builtin class-name\">source</span> <span class=\"token environment constant\">$HOME</span>/.bashrc_local\n\n<span class=\"token comment\"># Set environmental variables.</span>\n<span class=\"token assign-left variable\">EDITOR</span><span class=\"token operator\">=</span>vim\n\n<span class=\"token comment\"># Turn off system bell if we're not in an SSH session.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${SSH_TTY+x}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${<span class=\"token environment constant\">DISPLAY</span>+x}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> \n    <span class=\"token builtin class-name\">command</span> -v setterm\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      setterm --blength <span class=\"token number\">0</span>\n    <span class=\"token keyword\">fi</span>\n  <span class=\"token keyword\">else</span> xset -b\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Create the prompt.</span>\n<span class=\"token assign-left variable\">BLUE</span><span class=\"token operator\">=</span><span class=\"token string\">\"\\[<span class=\"token entity\" title=\"\\e\">\\e</span>[0;34m\\]\"</span>\n<span class=\"token assign-left variable\">OFF</span><span class=\"token operator\">=</span><span class=\"token string\">\"\\[<span class=\"token entity\" title=\"\\033\">\\033</span>[m\\]\"</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PS1</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"$%{BLUE%} $ $%{OFF%}\"</span></code></pre></div>\n<p>This file also turns off the system bell - very useful for new machines or virtual machines.  <code class=\"language-text\">.bashrc_local</code> isn't checked in version control.  It contains the emoji for the specific machine.  In the case of Apple it's just: 'EMOJI=ï£¿'.</p>\n<p>Based on stepping through a lot of ZSH configs (see footer) here's my changes.</p>\n<h2>Migrating existing bash config to zsh</h2>\n<p>To prepare myself for the migration I spent an hour or so reading <code class=\"language-text\">man zshmisc</code>.\nFirst I copied my bashrc into a new file named ~/.zshrc.  Then, because the colour escape sequences weren't working, I updated the BLUE and OFF lines to be compatible.</p>\n<p>To test colours, I made heavy use of <code class=\"language-text\">print -P &#39;&lt;escape sequence&gt;&#39;</code> and wrapping the colours in <code class=\"language-text\">%{...%}</code>.</p>\n<ul>\n<li>BLUE=\"%F{blue}\"</li>\n<li>OFF=\"%f\"</li>\n<li>PROMPT=\"\\$\"</li>\n<li>PS1=\"${EMOJI} %{${BLUE}%}${PROMPT}${OFF} \"</li>\n</ul>\n<p>As my original config was very simple, this was enough.</p>\n<h2>Taking advantage of ZSH functionality</h2>\n<p>Now zsh has alot of built in functionality that I was reluctant to take advantage of for compatibility reasons -- however, I spend a lot of time in the terminal so I found this few changes a good compromise between a supercharged terminal and a minimalist configuration.</p>\n<p>Start by reading <code class=\"language-text\">man zshbuiltins</code>.</p>\n<h3>Options</h3>\n<p>Configure options by running setopt OPTION<em>NAME and setopt noOPTION</em>NAME to unset.  <a href=\"http://zsh.sourceforge.net/Doc/Release/Options.html#Options\">http://zsh.sourceforge.net/Doc/Release/Options.html#Options</a></p>\n<h4>AUTO_CD</h4>\n<p>Automatically move into a new directory if only that name is typed at the prompt.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token builtin class-name\">pwd</span>\n$ /home/local\n$ bin\n$ <span class=\"token builtin class-name\">pwd</span>\n$ /home/local/bin</code></pre></div>\n<h4>APPEND_HISTORY</h4>\n<p>All zsh sessions append their command history to a single file instead of replacing it.  Note that the history file isn't updated until that zsh instance exits.</p>\n<h4>EXTENDED_HISTORY</h4>\n<p>Also save the command's timestamp and duration in the history file.  Extremely useful for timing commands.</p>\n<h4>HIST<em>NO</em>STORE</h4>\n<p>Don't store invocations of the builtin <code class=\"language-text\">history</code> in the history file.</p>\n<h3>Functions</h3>\n<h4>Completion system</h4>\n<p>I opted to start using the autocompletion system for smarter tab completion.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ ls -&lt;TAB&gt;              \n-1  -- single column output\n-A  -- list all except . and ..\n-B  -- print octal escapes for control characters\n-C  -- list entries in columns sorted vertically\n[.. snip ..]</code></pre></div>\n<h3>Modules</h3>\n<p>zsh includes a lot of built-in modules to further change the behaviour of the shell.  I didn't opt to enable them in my config.</p>\n<h3>Final configuration</h3>\n<p>Here's my final zsh config with all the above taken into account.  I imagine 3 months down the road this file will have even more changes.  You can always check the latest in <a href=\"https://github.com/xocite/dotrc/blob/master/zshrc\">xocite/dotrc/.zshrc @ GitHub</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Read our aliases file.</span>\n<span class=\"token builtin class-name\">source</span> <span class=\"token environment constant\">$HOME</span>/.aliases\n\n<span class=\"token comment\"># Read our local zshrc.</span>\n<span class=\"token builtin class-name\">source</span> <span class=\"token environment constant\">$HOME</span>/.zshrc_local\n\n<span class=\"token comment\"># Set environmental variables.</span>\n<span class=\"token assign-left variable\">EDITOR</span><span class=\"token operator\">=</span>vim\n\n<span class=\"token comment\"># Turn off system bell if we're not in an SSH session.</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${SSH_TTY+x}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token variable\">${<span class=\"token environment constant\">DISPLAY</span>+x}</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> \n    <span class=\"token builtin class-name\">command</span> -v setterm\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n      setterm --blength <span class=\"token number\">0</span>\n    <span class=\"token keyword\">fi</span>\n  <span class=\"token keyword\">else</span> xset -b\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">fi</span>\n\n\n<span class=\"token comment\"># Set options</span>\nsetopt AUTO_CD\nsetopt APPEND_HISTORY\nsetopt EXTENDED_HISTORY\nsetopt HIST_NO_STORE\n\n<span class=\"token comment\"># Load functions</span>\nautoload -U compinit <span class=\"token operator\">&amp;&amp;</span> compinit\n\n<span class=\"token comment\"># Create the prompt.</span>\n<span class=\"token assign-left variable\">BLUE</span><span class=\"token operator\">=</span><span class=\"token string\">\"%F{blue}\"</span>\n<span class=\"token assign-left variable\">OFF</span><span class=\"token operator\">=</span><span class=\"token string\">\"%f\"</span>\n<span class=\"token assign-left variable\">PROMPT</span><span class=\"token operator\">=</span><span class=\"token string\">\"\\$\"</span>\n<span class=\"token assign-left variable\"><span class=\"token environment constant\">PS1</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">${EMOJI}</span> %{<span class=\"token variable\">${BLUE}</span>%}<span class=\"token variable\">${PROMPT}</span><span class=\"token variable\">${OFF}</span> \"</span></code></pre></div>\n<h2>Further reading</h2>\n<ul>\n<li>zsh FAQ <a href=\"http://zsh.sourceforge.net/FAQ/zshfaq03.html#l42\">link</a></li>\n<li>Peter Karbowski's zsh config <a href=\"https://github.com/slashbeast/conf-mgmt/blob/master/roles/home_files/files/DOTzshrc\">link</a></li>\n<li>zsh manual <a href=\"http://zsh.sourceforge.net/Doc/Release\">link</a></li>\n</ul>","frontmatter":{"date":"2019-11-22","updated":null,"path":"/writing/zsh","title":"Switching to zsh from bash"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}